#!/usr/bin/env python
# -*- coding: utf-8 -*-
from __future__ import print_function
import kouignamann
import sys
import re
from optparse import OptionParser

if __name__ == '__main__':

    usage = "usage: %prog -i <inventory directory> -o <out dir> -t <template> [-n node]\n\n"\
            "examples:\n"\
            "   %prog -i inventory/ -t templates/cfg.tmp -o out/ -n host1"

    parser = OptionParser(usage=usage)
    parser.add_option("-i", "--inventory", dest="inventory", 
            help="inventory directory (mandatory)", 
            metavar="INVDIR")
    parser.add_option("-t", "--template", dest="template", 
            help="template (mandatory)", 
            metavar="TEMP")
    parser.add_option("-n", "--node", dest="node",
            help="node to use (optional)", 
            metavar="KEY")
    parser.add_option("-o", "--outdir", dest="outdir",
            help="out directory (mandatory)", 
            metavar="OUTDIR")
    (options, args) = parser.parse_args()

    data = {}
    node      = options.node
    inventory = options.inventory

    if inventory is None:
        print("ERROR: missing inventory directory", file=sys.stderr)
        sys.exit(1)
    try:
        inv = kouignamann.Inventory(inventory)
    except kouignamann.errors.DumplicatedKey as e:
        print("ERROR: duplicated entry '%(host)s' in '%(key)s'" \
                % { 'key': e.key, 'host': e.host }, file=sys.stderr)
        sys.exit(1)
    except kouignamann.errors.RelationError as e:
        print("ERROR: missing inventory directory", file=sys.stderr)
        sys.exit(1)

    if not node is None and not node in inv.hosts:
        print("ERROR: node '%(node)s' not in inventory" % {'node': node}, file=sys.stderr)
        sys.exit(1)

    if not node is None:
        pass
    else:
        pass

# vim: tabstop=8 expandtab shiftwidth=4 softtabstop=4
